package week5

object week5 {
  val fruit = List("apples", "oranges", "pears")  //> fruit  : List[String] = List(apples, oranges, pears)
  val nums = List(1, 2, 3)                        //> nums  : List[Int] = List(1, 2, 3)

  def removeAt(n: Int, xs: List[Int]) = (xs take n) ::: (xs drop n + 1)
                                                  //> removeAt: (n: Int, xs: List[Int])List[Int]

	removeAt(1, nums)                         //> res0: List[Int] = List(1, 3)


	def flatten(xs: List[Any]): List[Any] = xs match {
			case z :: zs { z match {
				case l: List[Any]}
			}	
		
//		case Nil => List()
//		case List() => println("List()"); flatten(xs.tail)
//		case List(y) :: ys => println("List(y)"); y :: flatten(ys)
//		case y :: ys => println("y :: ys"); y :: flatten(ys)
	}                                         //> flatten: (xs: List[Any])List[Any]

	flatten(List(List(100)))                  //> List(y)
                                                  //| res1: List[Any] = List(100)

	flatten(List(List(1, 1), 2, List(3, List(5, 8))))
                                                  //> y :: ys
                                                  //| y :: ys
                                                  //| y :: ys
                                                  //| res2: List[Any] = List(List(1, 1), 2, List(3, List(5, 8)))
																		 //             >   res0: List[Any] = List(1, 1, 2, 3, 5, 8)

}