package week5

object listfun {
  val nums = List(2,-4,5,7,1,8)                   //> nums  : List[Int] = List(2, -4, 5, 7, 1, 8)
	val fruits = List("apple", "pinapple", "orange", "banana")
                                                  //> fruits  : List[String] = List(apple, pinapple, orange, banana)



	nums.filterNot(x => x > 0)                //> res0: List[Int] = List(-4)

	//super cool, return a list for which the condition holds and a list for which it doesn't.
	nums.partition(x => x > 0)                //> res1: (List[Int], List[Int]) = (List(2, 5, 7, 1, 8),List(-4))

	//longset prefix for which the predicate is true:
	nums.takeWhile(x => x > 0)                //> res2: List[Int] = List(2)

	//the remainder without the elements taken by takeWhile
	nums.dropWhile(x => x > 0)                //> res3: List[Int] = List(-4, 5, 7, 1, 8)
	
	//combination of takeWhile and dropWhile
	nums.span(x => x > 0)                     //> res4: (List[Int], List[Int]) = (List(2),List(-4, 5, 7, 1, 8))





	def pack[T](xs: List[T]): List[List[T]] = xs match
	{
		case Nil => Nil
		case x :: xs1 => 
			val (first, rest) = xs span(y => y == x)
	
	}                                         //> pack: [T](xs: List[T])List[List[T]]
	
	pack(List("a","a","a","b","c","c","a"))   //> scala.MatchError: List(a, a, a, b, c, c, a) (of class scala.collection.immut
                                                  //| able.$colon$colon)
                                                  //| 	at week5.listfun$$anonfun$main$1.pack$1(week5.listfun.scala:27)
                                                  //| 	at week5.listfun$$anonfun$main$1.apply$mcV$sp(week5.listfun.scala:34)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$$anonfun$$exe
                                                  //| cute$1.apply$mcV$sp(WorksheetSupport.scala:76)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.redirected(W
                                                  //| orksheetSupport.scala:65)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.$execute(Wor
                                                  //| ksheetSupport.scala:75)
                                                  //| 	at week5.listfun$.main(week5.listfun.scala:3)
                                                  //| 	at week5.listfun.main(week5.listfun.scala)
}