package week6


object pairs {
	def isPrime(n: Int): Boolean = (2 until n) forall (d => n%d != 0)
                                                  //> isPrime: (n: Int)Boolean
	
	val n = 7                                 //> n  : Int = 7
	
		//(1 until n) flatMap (i => (1 until i) map (j => (i,j))) filter (pair =>isPrime(pair._1, pair._2)
		isPrime(12)                       //> res0: Boolean = true
}