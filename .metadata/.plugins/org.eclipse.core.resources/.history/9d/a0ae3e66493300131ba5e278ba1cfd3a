object week_3 {
	
}


abstract class IntSet {
	def incl(x: Int): IntSet
	def contains(x: Int): Boolean
}


class Emtpy extends IntSet {
	def contains(x: Int): Boolean = false
	def incl(x: Int): IntSet = new NonEmpty(x, new Empty, new Empty)
}


class NonEmtpy(elem: Int, left: IntSet, right: IntSet) extends IntSet {
	def contains(x: Int): Boolean =
		if (x < elem) left contains x
		else if (x > elem) right contains x
		else true

	def incl(x: Int): IntSet =
		if (x < elem) new NonEmtpy(x, left incl x, right)
}